Cistrome velocity would leverage data from paired-seq or scNMT-seq to provide developmental trajectories of the cistrome.
options(stringsAsFactors=FALSE)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Documents/Projects/2020_03_hpvStrain")
convert_strain = function(chromname){
ID = unlist(strsplit(chromname, "|", T))[4]
parts = unlist(strsplit(chromname, "_", T))
currentname = "NA"
for(part in parts){
if(part=="type"){
currentname = parts[which(parts==part) + 1]
}else if(part=="isolate"){
currentname = parts[which(parts==part) - 1]
}
}
if(currentname == "NA"){
if(any(grepl("HPV-", parts))){
return(paste(ID, parts[grep("HPV-", parts)]))
}else{
return(paste(ID, chromname))
}
}else if(grepl("HPV", currentname)){
return(paste(ID, currentname))
}else{
return(paste(ID, "HPV", currentname))
}
}
hpvdf = read.csv("PercentHpvMappingHNSC.tsv", header=T, sep="\t")
hpvdf$Virus = gsub(",", "", sapply(hpvdf$Chrom, convert_strain))
require(knitr)
kable(head(hpvdf), caption="Head of datasets used for calling the dominant strains")
require(ggplot2)
list.data = lapply(unique(hpvdf$File), function(filename){
tempdf = hpvdf[hpvdf$File==filename, ]
top5 = tempdf[order(tempdf$Percent, decreasing=TRUE)[1:5],]
top5$File = gsub("_MappedtoAllHPVs.bam", "", top5$File)
return(top5)
})
top5df = do.call("rbind", list.data)
P = ggplot(top5df, aes(x=File, y=Percent, fill=Virus)) +
geom_bar(stat="identity", position="stack") +
theme_bw(base_size=18) +
theme(legend.position="bottom",
axis.text.x=element_text(angle=45, hjust=1))
plot(P)
pdf("HNSC_PlotOfTop5Strains.pdf", width=20, height=10)
plot(P)
#dev.off()
scottdf = read.csv("HPV_Stat_with_Clinical_parameters.txt", header=T, sep="\t")
top5df$ReferenceVirus = scottdf[top5df$File, "Virus_Name"]
P = ggplot(top5df, aes(x=File, y=Percent, fill=Virus)) +
geom_bar(stat="identity", position="stack") +
facet_grid(.~ReferenceVirus, scales="free", space="free_x") +
theme_bw(base_size=18) +
theme(legend.position="bottom",
axis.text.x=element_text(angle=45, hjust=1))
plot(P)
hpvdf = read.csv("hnscHpvStrains_202003.tsv", header=T, sep="\t")
hpvdf$Virus = gsub(",", "", sapply(hpvdf$Chrom, convert_strain))
head(hpvdf)
hpvdf_filtered = read.csv("hnscHpvStrains_202003.tsv", header=T, sep="\t")
hpvdf_filtered$Virus = gsub(",", "", sapply(hpvdf_filtered$Chrom, convert_strain))
hpvdf_filtered = read.csv("hnscHpvStrains_202003.tsv", header=T, sep="\t")
hpvdf_filtered$Virus = gsub(",", "", sapply(hpvdf_filtered$Chrom, convert_strain))
list.data = lapply(unique(hpvdf_filtered$File), function(filename){
tempdf = hpvdf_filtered[hpvdf_filtered$File==filename, ]
top5 = tempdf[order(tempdf$Percent, decreasing=TRUE)[1:5],]
top5$File = gsub("_MappedtoAllHPVs.bam", "", top5$File)
return(top5)
})
top5df = do.call("rbind", list.data)
P = ggplot(top5df, aes(x=File, y=Percent, fill=Virus)) +
geom_bar(stat="identity", position="stack") +
theme_bw(base_size=18) +
theme(legend.position="bottom",
axis.text.x=element_text(angle=45, hjust=1))
plot(P)
pdf("HNSC_PlotOfTop5Strains_filtered.pdf", width=20, height=10)
plot(P)
dev.off()
dev.off()
pdf("HNSC_PlotOfTop5Strains_filtered.pdf", width=20, height=10)
plot(P)
dev.off()
?gg_save
require(ggplot2)
?ggsave
ggsave("HNSC_PlotOfTop5Strains_filtered.pdf", P, width=20, height=10)
# map with scott's
scottdf = read.csv("HPV_Stat_with_Clinical_parameters.txt", header=T, sep="\t")
top5df$ReferenceVirus = scottdf[top5df$File, "Virus_Name"]
P = ggplot(top5df, aes(x=File, y=Percent, fill=Virus)) +
geom_bar(stat="identity", position="stack") +
facet_grid(.~ReferenceVirus, scales="free", space="free_x") +
theme_bw(base_size=18) +
theme(legend.position="bottom",
axis.text.x=element_text(angle=45, hjust=1))
ggsave("HNSC_PlotOfTop5Strains_VersusRef_filtered.pdf", P, width=20, height=10)
head(top5df)
# map with scott's
scottdf = read.csv("HPV_Stat_with_Clinical_parameters.txt", header=T, sep="\t")
top5df = top5df[!is.na(top5df$File),]
top5df$ReferenceVirus = scottdf[top5df$File, "Virus_Name"]
P = ggplot(top5df, aes(x=File, y=Percent, fill=Virus)) +
geom_bar(stat="identity", position="stack") +
facet_grid(.~ReferenceVirus, scales="free", space="free_x") +
theme_bw(base_size=18) +
theme(legend.position="bottom",
axis.text.x=element_text(angle=45, hjust=1))
ggsave("HNSC_PlotOfTop5Strains_VersusRef_filtered.pdf", P, width=20, height=10)
options(stringsAsFactors=FALSE)
setwd("~/Documents/mounts/q_hdd/gmData/trainedModels/2020_03_03/PerformanceParts")
setwd("~/Documents/Projects/covid19/timeseries/JHU-2019nCoV-to-pandas-DF")
deathmat = read.csv("Deaths.tsv", header=T, sep="\t", check.names=F, row.names=1)
colnames(deathmat)
tinytex::install_tinytex()
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Documents/Projects/covid19/timeseries/JHU-2019nCoV-to-pandas-DF")
require(ggplot2)
require(reshape2)
require(scales)
require(ggrepel)
deathmat = read.csv("Deaths.tsv", header=T,
sep="\t", check.names=F, row.names=1)
casemat = read.csv("Confirmed.tsv", header=T, sep="\t", check.names=F, row.names=1)
normmat = casemat[,1:(ncol(casemat - 1))] / (0.1  + deathmat[,setdiff(colnames(casemat), "date")])
dim(casemat)
dim(normmat)
dim(deathmat)
normmat = casemat[,1:(ncol(casemat) - 1)] / (0.1  + deathmat[,setdiff(colnames(casemat), "date")])
head(normmat)
deathrate = deathmat[,1:(ncol(deathmat) - 1)] / (0.1  + casemat[,setdiff(colnames(deathmat), "date")])
moltendf = melt(deathrate[,c(countries, "date")])
deathratedf = deathrate
deathratedf$date = casemat$date
moltendf = melt(deathratedf[,c(countries, "date")])
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Documents/Projects/covid19/timeseries/JHU-2019nCoV-to-pandas-DF")
require(ggplot2)
require(reshape2)
require(scales)
require(ggrepel)
deathmat = read.csv("Deaths.tsv", header=T,
sep="\t", check.names=F, row.names=1)
head(deathmat)
colnames(deathmat)
sum(colnames(deathmat)=="UK")
sum(colnames(deathmat)=="England")
sum(colnames(deathmat)=="United Kingdom")
deathmat = read.csv("Deaths.tsv", header=T,
sep="\t", check.names=F, row.names=1)
min(deathmat[,"US"])
unique(deathmat[,"US"])
deathmat = read.csv("Deaths.tsv", header=T,
sep="\t", check.names=F, row.names=1)
casemat = read.csv("Confirmed.tsv", header=T, sep="\t", check.names=F, row.names=1)
deathrate = deathmat[,1:(ncol(deathmat) - 1)] / (0.1  + casemat[,setdiff(colnames(deathmat), "date")])
deathrate[,c("China", "Korea, South")]
?geom_rect
deathmat = read.csv("Deaths.tsv", header=T,
sep="\t", check.names=F, row.names=1)
casemat = read.csv("Confirmed.tsv", header=T, sep="\t", check.names=F, row.names=1)
deathrate = deathmat[,1:(ncol(deathmat) - 1)] / (0.1  + casemat[,setdiff(colnames(deathmat), "date")])
deathratedf = deathrate
deathratedf$date = casemat$date
moltendf = melt(deathratedf[,c(countries, "date")])
countries = c("China", "Iran", "Italy",
"US", "Turkey", "Spain",
"France", "Canada", "Germany",
"Korea, South", "United Kingdom")
deathmat = read.csv("Deaths.tsv", header=T,
sep="\t", check.names=F, row.names=1)
casemat = read.csv("Confirmed.tsv", header=T, sep="\t", check.names=F, row.names=1)
deathrate = deathmat[,1:(ncol(deathmat) - 1)] / (0.1  + casemat[,setdiff(colnames(deathmat), "date")])
deathratedf = deathrate
deathratedf$date = casemat$date
moltendf = melt(deathratedf[,c(countries, "date")])
moltendf$date = as.Date(moltendf$date)
P = ggplot(moltendf, aes(x=date, y=value, group=variable)) +
geom_rect(data=deathreatedf, aes(xmin=date, xmax=date+1, ymin=China, ymax=`Korea, South`), alpha=0.1, colour="pink", fill="pink") +
geom_line() +
theme_bw(base_size=14) +
facet_wrap(~variable, scales="free") +
scale_y_continuous(
name="COVID-19 deathrate", labels=comma) +
xlab("Date as of outbreak") +
coord_cartesian(ylim=c(0, 0.1))
P = ggplot(moltendf, aes(x=date, y=value, group=variable)) +
geom_rect(data=deathratedf, aes(xmin=date, xmax=date+1, ymin=China, ymax=`Korea, South`), alpha=0.1, colour="pink", fill="pink") +
geom_line() +
theme_bw(base_size=14) +
facet_wrap(~variable, scales="free") +
scale_y_continuous(
name="COVID-19 deathrate", labels=comma) +
xlab("Date as of outbreak") +
coord_cartesian(ylim=c(0, 0.1))
plot(P)
P = ggplot(moltendf, aes(x=date, y=value, group=variable)) +
geom_rect(xmin=deathreatedf$date, xmax=deathreatedf$date+1, ymin=deathreatedf$China, ymax=deathreatedf[,"Korea, South"], alpha=0.1, colour="pink", fill="pink") +
geom_line() +
theme_bw(base_size=14) +
facet_wrap(~variable, scales="free") +
scale_y_continuous(
name="COVID-19 deathrate", labels=comma) +
xlab("Date as of outbreak") +
coord_cartesian(ylim=c(0, 0.1))
P = ggplot(moltendf, aes(x=date, y=value, group=variable)) +
geom_rect(xmin=deathratedf$date, xmax=deathratedf$date+1, ymin=deathratedf$China, ymax=deathratedf[,"Korea, South"], alpha=0.1, colour="pink", fill="pink") +
geom_line() +
theme_bw(base_size=14) +
facet_wrap(~variable, scales="free") +
scale_y_continuous(
name="COVID-19 deathrate", labels=comma) +
xlab("Date as of outbreak") +
coord_cartesian(ylim=c(0, 0.1))
deathratedf$date = as.Date(deathratedf$date)
P = ggplot(moltendf, aes(x=date, y=value, group=variable)) +
geom_rect(xmin=deathratedf$date, xmax=deathratedf$date, ymin=deathratedf$China, ymax=deathratedf[,"Korea, South"], alpha=0.1, colour="pink", fill="pink") +
geom_line() +
theme_bw(base_size=14) +
facet_wrap(~variable, scales="free") +
scale_y_continuous(
name="COVID-19 deathrate", labels=comma) +
xlab("Date as of outbreak") +
coord_cartesian(ylim=c(0, 0.1))
plot(P)
P
P = ggplot(moltendf, aes(x=date, y=value, group=variable)) +
geom_rect(xmin=deathratedf$date, xmax=deathratedf$date,
ymin=deathratedf$China,
ymax=deathratedf[,"Korea, South"],
alpha=rep(0.1, nrow(deathratedf)),
colour=rep("pink", nrow(deathratedf)),
fill=rep("pink", nrow(deathratedf))) +
geom_line() +
theme_bw(base_size=14) +
facet_wrap(~variable, scales="free") +
scale_y_continuous(
name="COVID-19 deathrate", labels=comma) +
xlab("Date as of outbreak") +
coord_cartesian(ylim=c(0, 0.1))
P
P = ggplot(moltendf, aes(x=date, y=value, group=variable)) +
geom_rect(xmin=deathratedf$date, xmax=deathratedf$date+1,
ymin=deathratedf$China,
ymax=deathratedf[,"Korea, South"],
alpha=rep(0.1, nrow(deathratedf)),
colour=rep("pink", nrow(deathratedf)),
fill=rep("pink", nrow(deathratedf))) +
geom_line() +
theme_bw(base_size=14) +
facet_wrap(~variable, scales="free") +
scale_y_continuous(
name="COVID-19 deathrate", labels=comma) +
xlab("Date as of outbreak") +
coord_cartesian(ylim=c(0, 0.1))
P
deathratedf$date
deathratedf$China
P = ggplot(moltendf, aes(x=date, y=value, group=variable)) +
geom_rect(xmin=deathratedf$date, xmax=deathratedf$date+1,
ymin=deathratedf$China,
ymax=deathratedf[,"Korea, South"],
alpha=rep(0.1, nrow(deathratedf)),
fill=rep("pink", nrow(deathratedf))) +
geom_line() +
theme_bw(base_size=14) +
facet_wrap(~variable, scales="free") +
scale_y_continuous(
name="COVID-19 deathrate", labels=comma) +
xlab("Date as of outbreak") +
coord_cartesian(ylim=c(0, 0.1))
P
P = ggplot(moltendf, aes(x=date, y=value, group=variable)) +
geom_rect(xmin=deathratedf$date, xmax=deathratedf$date+1,
ymin=deathratedf$China,
ymax=deathratedf[,"Korea, South"],
alpha=rep(0.1, nrow(deathratedf)),
fill=rep("pink", nrow(deathratedf)))
P
P = ggplot(moltendf, aes(x=date, y=value, group=variable)) +
geom_rect(xmin=min(deathratedf$date),
xmax=max(deathratedf$date+1),
ymin=max(deathratedf$China),
ymax=max(deathratedf[,"Korea, South"]),
alpha=0.1,
fill="pink") +
geom_line() +
theme_bw(base_size=14) +
facet_wrap(~variable, scales="free") +
scale_y_continuous(
name="COVID-19 deathrate", labels=comma) +
xlab("Date as of outbreak") +
coord_cartesian(ylim=c(0, 0.1))
P
textmat = casemat[which.max(casemat[,"China"]), ]
textdf = melt(textmat[,c(countries, date)])
textdf$date = as.Date(textdf$date)
textmat = casemat[which.max(casemat[,"China"]), ]
textmat
textdf = melt(as.data.frame(textmat[,c(countries, date)]))
textdf = melt(as.data.frame(textmat[,c(countries, "date")]))
head(textdf)
textdf$date = as.Date(textdf$date)
textdf$Label = paste("N =", comma(textdf$value))
textdf
P = ggplot(moltendf, aes(x=date, y=value, group=variable)) +
geom_rect(xmin=min(deathratedf$date),
xmax=max(deathratedf$date+1),
ymin=max(deathratedf$China),
ymax=max(deathratedf[,"Korea, South"]),
alpha=0.05,
fill="pink") +
geom_line() +
geom_text(date=textdf, aes(label=Label), colour='blue', y=0.03) +
theme_bw(base_size=14) +
facet_wrap(~variable, scales="free") +
scale_y_continuous(
name="COVID-19 deathrate", labels=comma) +
xlab("Date as of outbreak") +
coord_cartesian(ylim=c(0, 0.1))
textdf$variable = as.Date(textdf$variable)
textdf = melt(as.data.frame(textmat[,c(countries, "date")]))
textdf$variable = as.Date(textdf$variable)
head(textdf)
textdf = melt(textmat[,c(countries, "date")])
head(textdf)
textmat = casemat[which.max(casemat[,"China"]), ]
textdf = melt(as.data.frame(textmat[,c(countries, "date")]))
textdf$date = as.Date(textdf$date)
textdf$Label = paste("N =", comma(textdf$value))
P = ggplot(moltendf, aes(x=date, y=value, group=variable)) +
geom_rect(xmin=min(deathratedf$date),
xmax=max(deathratedf$date+1),
ymin=max(deathratedf$China),
ymax=max(deathratedf[,"Korea, South"]),
alpha=0.05,
fill="pink") +
geom_line() +
geom_text(date=textdf, aes(label=Label), colour='blue', y=0.03) +
theme_bw(base_size=14) +
facet_wrap(~variable, scales="free") +
scale_y_continuous(
name="COVID-19 deathrate", labels=comma) +
xlab("Date as of outbreak") +
coord_cartesian(ylim=c(0, 0.1))
P
head(textdf)
?geom_text
moltendf$Label = NA
P = ggplot(moltendf, aes(x=date, y=value, group=variable)) +
geom_rect(xmin=min(deathratedf$date),
xmax=max(deathratedf$date+1),
ymin=max(deathratedf$China),
ymax=max(deathratedf[,"Korea, South"]),
alpha=0.05,
fill="pink") +
geom_line() +
geom_text(date=textdf, aes(label=Label), colour='blue', y=0.03) +
theme_bw(base_size=14) +
facet_wrap(~variable, scales="free") +
scale_y_continuous(
name="COVID-19 deathrate", labels=comma) +
xlab("Date as of outbreak") +
coord_cartesian(ylim=c(0, 0.1))
P
textdf$date = min(as.Date(deathratedf$date))
textdf$Label = paste("N =", comma(textdf$value))
P = ggplot(moltendf, aes(x=date, y=value, group=variable)) +
geom_rect(xmin=min(deathratedf$date),
xmax=max(deathratedf$date+1),
ymin=max(deathratedf$China),
ymax=max(deathratedf[,"Korea, South"]),
alpha=0.05,
fill="pink") +
geom_line() +
geom_text(date=textdf, aes(label=Label), colour='blue', y=0.03) +
theme_bw(base_size=14) +
facet_wrap(~variable, scales="free") +
scale_y_continuous(
name="COVID-19 deathrate", labels=comma) +
xlab("Date as of outbreak") +
coord_cartesian(ylim=c(0, 0.1))
P
textdf$date = max(as.Date(deathratedf$date))/2
textdf$date = min(as.Date(deathratedf$date)) + 10
textdf$Label = paste("N =", comma(textdf$value))
P = ggplot(moltendf, aes(x=date, y=value, group=variable)) +
geom_rect(xmin=min(deathratedf$date),
xmax=max(deathratedf$date+1),
ymin=max(deathratedf$China),
ymax=max(deathratedf[,"Korea, South"]),
alpha=0.05,
fill="pink") +
geom_line() +
geom_text(date=textdf, aes(label=Label), colour='blue', y=0.03) +
theme_bw(base_size=14) +
facet_wrap(~variable, scales="free") +
scale_y_continuous(
name="COVID-19 deathrate", labels=comma) +
xlab("Date as of outbreak") +
coord_cartesian(ylim=c(0, 0.1))
P
textdf$value = 0.05
textdf = melt(as.data.frame(textmat[,c(countries, "date")]))
textdf$date = min(as.Date(deathratedf$date)) + 10
textdf$Label = paste("N =", comma(textdf$value))
textdf$value = 0.05
P = ggplot(moltendf, aes(x=date, y=value, group=variable)) +
geom_rect(xmin=min(deathratedf$date),
xmax=max(deathratedf$date+1),
ymin=max(deathratedf$China),
ymax=max(deathratedf[,"Korea, South"]),
alpha=0.05,
fill="pink") +
geom_line() +
geom_text(date=textdf, aes(x=date, y=value, label=Label), colour='blue') +
theme_bw(base_size=14) +
facet_wrap(~variable, scales="free") +
scale_y_continuous(
name="COVID-19 deathrate", labels=comma) +
xlab("Date as of outbreak") +
coord_cartesian(ylim=c(0, 0.1))
P
P = ggplot(moltendf, aes(x=date, y=value, group=variable)) +
geom_rect(xmin=min(deathratedf$date),
xmax=max(deathratedf$date+1),
ymin=max(deathratedf$China),
ymax=max(deathratedf[,"Korea, South"]),
alpha=0.05,
fill="pink") +
geom_line() +
geom_text(data=textdf, aes(x=date, y=value, label=Label), colour='blue') +
theme_bw(base_size=14) +
facet_wrap(~variable, scales="free") +
scale_y_continuous(
name="COVID-19 deathrate", labels=comma) +
xlab("Date as of outbreak") +
coord_cartesian(ylim=c(0, 0.1))
P
Sys.time()
setwd("~/Documents/Projects/covid19/timeseries/JHU-2019nCoV-to-pandas-DF")
dir()
setwd("~/Documents/Projects/covid19/timeseries/JHU-2019nCoV-to-pandas-DF")
dir()
dir("COVID-19/")
dir()
setwd("~/Documents/Projects/covid19/timeseries/JHU-2019nCoV-to-pandas-DF/COVID-19/csse_covid_19_data/csse_covid_19_time_series")
setwd("~/Documents/Projects/covid19/timeseries/JHU-2019nCoV-to-pandas-DF/COVID-19/csse_covid_19_data/csse_covid_19_time_series")
dir()
casedf = read.csv("time_series_covid19_confirmed_global.csv", header=T)
casedf = read.csv("time_series_covid19_confirmed_global.csv", header=T)
head(casedf)
casedf = read.csv("time_series_covid19_confirmed_global.csv", header=T, check.names=F)
casedf = read.csv("time_series_covid19_confirmed_global.csv", header=T, check.names=F)
head(casedf)
head(casedf[,1:4])
head(casedf[,1:8])
head(casedf[,1:4])
head(casedf)
casedf = casedf[casedf[,2]=="Canada", c(1, 5:ncol(casedf))]
head(casedf)
moltendf = melt(casedf)
require(reshape2)
moltendf = melt(casedf)
head(moltendf)
moltendf$data = as.Date(moltendf$variable)
moltendf$data = as.Date(as.character(moltendf$variable))
?as.Data
?as.Date
moltendf$date = as.Date(as.character(moltendf$variable), tryFormats="%m/%d/%Y")
head(moltendf$date)
textdf = melt(casedf[nrow(casedf),]))
textdf = melt(casedf[nrow(casedf),])
head(textdf)
textdf = melt(casedf[nrow(casedf),])
textdf$date = as.Date(as.character(textdf$variable), tryFormats="%m/%d/%Y")
textdf$date = min(as.Date(deathratedf$date)) + 10
textdf$Label = paste("N =", comma(textdf$value))
require(scales)
textdf$Label = paste("N =", comma(textdf$value))
textdf$value = 0.08
head(moltendf)
head(textdf)
textdf = melt(casedf[,c(1, ncol(casedf))])
textdf$date = as.Date(as.character(textdf$variable), tryFormats="%m/%d/%Y")
textdf$date = min(as.Date(deathratedf$date)) + 10
textdf$Label = paste("N =", comma(textdf$value))
textdf$value = 0.08
yead
head(textdf)
setwd("~/Documents/Projects/covid19/timeseries/JHU-2019nCoV-to-pandas-DF/COVID-19/csse_covid_19_data/csse_covid_19_time_series")
casedf = read.csv("time_series_covid19_confirmed_global.csv", header=T, check.names=F)
casedf = casedf[casedf[,2]=="Canada", c(1, 5:ncol(casedf))]
casedf = read.csv("time_series_covid19_confirmed_global.csv", header=T, check.names=F)
casedf = read.csv("time_series_covid19_confirmed_global.csv", header=T, check.names=F)
casedf = casedf[casedf[,2]=="Canada", c(1, 5:ncol(casedf))]
moltendf = melt(casedf)
moltendf$date = as.Date(as.character(moltendf$variable), tryFormats="%m/%d/%Y")
textdf = melt(casedf[,c(1, ncol(casedf))])
textdf$date = as.Date(as.character(textdf$variable), tryFormats="%m/%d/%y")
textdf$date = min(as.Date(deathratedf$date)) + 10
textdf$Label = paste("N =", comma(textdf$value))
textdf$value = 0.08
textdf = melt(casedf[,c(1, ncol(casedf))])
textdf$date = as.Date(as.character(textdf$variable), tryFormats="%m/%d/%y")
textdf$date = min(as.Date(textdf$date)) - 10
textdf$Label = paste("N =", comma(textdf$value))
textdf$value = 0.08
head(textdf)
moltendf$date = as.Date(as.character(moltendf$variable), tryFormats="%m/%d/%y")
head(moltendf)
